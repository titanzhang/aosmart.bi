node('NodeRaw') {

  try {
    stage ('Clone Source') {
        checkout scm
    }

    stage('Production Config') {
      dir('server') {
        configFileProvider([configFile(fileId: 'aos_server_config_elasticesearch', variable: 'CONFIG_ES')]) {
          sh "cp \"${CONFIG_ES}\" src/config/elasticsearch.js"
        }
        configFileProvider([configFile(fileId: 'aos_server_config_web', variable: 'CONFIG_SERVER')]) {
          sh "cp \"${CONFIG_SERVER}\" src/config/web.js"
        }
        configFileProvider([configFile(fileId: 'aos_server_entrypoint_web', variable: 'ENTRYPOINT')]) {
          sh "cp \"${ENTRYPOINT}\" entrypoint"
        }
      }
    }

    stage('Compile') {
      dir('server') {
        def NODE_VERSION = '7.8'
        docker.image("node:${NODE_VERSION}").inside {
          sh 'npm install --production'
        }
      }
    }

    stage('Build Docker image') {
      dir('server') {
        def newImage = docker.build("aos-server", "-f build_config/server.dockerfile --build-arg NODE_ENV=production .")
        docker.withRegistry("https://239150759114.dkr.ecr.us-west-1.amazonaws.com", "ecr:us-west-1:aws-ecr-cred") {
          newImage.push("${env.BUILD_ID}")
          newImage.push("latest")
        }
      }
    }

  } finally {
    stage('Cleanup') {
      cleanWs notFailBuild: true
    }
  }

}
